### This file was generated by Nexus Schema
### Do not make changes to this file directly


type AuthPayload {
  token: String
  user: User
}

"""
A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the `date-time` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.
"""
scalar DateTime

type Host {
  dateJoined: String!
  description: String
  details: [String]!
  firstName: String!
  id: String!
  listings: [Listing]!
  medals: [String]!
}

"""
The `JSONObject` scalar type represents JSON objects as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
"""
scalar JSONObject @specifiedBy(url: "http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf")

type Listing {
  address: String!
  amenities: [String]!
  basicAmenities: [String]!
  city: String!
  cleaningFee: Int!
  datesUnavailable: JSONObject!
  healthAndSafety: [String]!
  highlights: [String]!
  host: Host
  hostId: String!
  houseRules: [String]!
  id: String!
  imageComments: [String]!
  languages: [String]!
  listingDescription: String
  listingType: String!
  location: String!
  locationDescription: String
  numBaths: Int!
  numBedrooms: Int!
  numBeds: Int!
  numGuests: Int!
  petsRule: Boolean!
  price: Int!
  region: String!
  reservations: [Reservation]!
  reviews: [Review]!
  reviewsCount: Int!
  score: Float!
  scores: [String]!
  smokingRule: Boolean!
  state: String!
  stayDescription: String
  street: String!
  superhost: Boolean!
  title: String!
  zipCode: String!
}

type Mutation {
  createReservation(data: ReservationCreateInput!): Reservation
  createReview(data: ReviewCreateInput!): Review
  deleteReservation(id: String!): Reservation
  deleteReview(id: String!): Review
  login(email: String!, password: String!): AuthPayload
  signup(email: String!, firstName: String!, lastName: String!, password: String!): AuthPayload
  verifyEmail(email: String!): Boolean
}

type Query {
  allListings: [Listing!]!
  listingById(id: String!): Listing
  listingsByRegion(region: String!): [Listing!]!
  me: User
  reservationsById(id: String!): Reservation
  reservationsByUserId(id: String!): [[Reservation]!]!
  reviewsByUserId(id: String!, offset: Int): [Review!]!
  userById(id: String!): User
}

type Reservation {
  dateEnd: DateTime!
  dateStart: DateTime!
  id: String!
  listing: Listing
  listingId: String!
  totalPrice: Float!
  user: User
  userId: String!
}

input ReservationCreateInput {
  dateEnd: DateTime!
  dateStart: DateTime!
  listingId: String!
  totalPrice: Int!
}

type Review {
  author: User
  authorId: String!
  content: String!
  date: DateTime!
  id: String!
  listing: Listing
  listingId: String!
  scores: [String]!
}

input ReviewCreateInput {
  authorId: String!
  content: String!
  listingId: String!
  scores: [String!]!
}

type User {
  dateJoined: String!
  email: String!
  firstName: String!
  id: String!
  lastName: String!
  reservations: [Reservation]!
  reviews: [Review]!
  reviewsCount: Int!
}
